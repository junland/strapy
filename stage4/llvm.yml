name        : llvm
version     : 12.0.0
release     : 1
summary     : Low Level Virtual Machine
license     :
    - Apache-2.0 WITH LLVM-exception
    - NCSA
homepage    : https://www.llvm.org
description : |
    Low Level Virtual Machine
upstreams   :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/clang-12.0.0rc3.src.tar.xz:
        hash: 1267b88d4590d638bab598cc5b54ba0b7520c9aa35d931206941b66f90e7e2f5
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/compiler-rt-12.0.0rc3.src.tar.xz:
        hash: 6b5f6fab7a35160271c368c5aadf76c948dcc80454f6c3dc0678484e197092d8
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/libcxx-12.0.0rc3.src.tar.xz:
        hash: f34130fbff5f5ebc388097b86ba7679e1d070bd067e51e260eb3f11bd7f62484
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/libcxxabi-12.0.0rc3.src.tar.xz:
        hash: 18584002451dd61be4e3514f81e25d8a85692ad0dd01d7efca8be6d2e837aced
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/libunwind-12.0.0rc3.src.tar.xz:
        hash: df877d783d7ec23d11addd9903599d24c4b73e1322866faffedb5fe3a698c3a2
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/lld-12.0.0rc3.src.tar.xz:
        hash: 81ef3fcfdaf5456e804207b4d1d7006d6d5da2431891b8d128f9c6074febf724
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/llvm-12.0.0rc3.src.tar.xz:
        hash: e51984ff9c7869c3af38f9b4cd9047f22083cac5f4a52d3dbb9da1259b9dedd2
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0-rc3/openmp-12.0.0rc3.src.tar.xz:
        hash: 0560afdbd06eef26b9c88902817e776e2718d0ada5b4d2e97920f2ddec79814f
        extract: false
install     : |
    tar xf %(sourcedir)/clang-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/compiler-rt-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxx-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxxabi-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libunwind-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/lld-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/llvm-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/openmp-%(version).src.tar.xz -C .

    # Setup source tree
    ln -sv "clang-%(version).src" clang
    ln -sv "compiler-rt-%(version).src" compiler-rt
    ln -sv "libcxx-%(version).src" libcxx
    ln -sv "libcxxabi-%(version).src" libcxxabi
    ln -sv "libunwind-%(version).src" libunwind
    ln -sv "lld-%(version).src" lld
    ln -sv "llvm-%(version).src" llvm

    # This is a bit hacky till there's an export for all build stages
    export llvmopts="
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_ENABLE_PROJECTS='clang;compiler-rt;libcxx;libcxxabi;libunwind;lld;llvm' \
        -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_TARGET_ARCH="X86_64" \
        -DLLVM_DEFAULT_TARGET_TRIPLE="%(build)" \
        -DLLVM_TARGETS_TO_BUILD="X86" \
        -DLLVM_ENABLE_LIBXML2=OFF \
        -DLLVM_ENABLE_FFI=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
        -DCLANG_DEFAULT_LINKER=lld \
        -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
        -DCLANG_DEFAULT_RTLIB=compiler-rt \
        -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
        -DCOMPILER_RT_USE_LIBCXX=ON \
        -DLLVM_ENABLE_LIBCXX=ON \
        -DSANITIZER_CXX_ABI=libc++ \
        -DLIBCXX_INSTALL_SUPPORT_HEADERS=ON \
        -DLIBCXX_ENABLE_SHARED=ON \
        -DLIBCXX_ENABLE_STATIC=OFF \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_ENABLE_SHARED=ON \
        -DLIBCXXABI_ENABLE_STATIC=OFF \
        -DLIBCXXABI_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_ENABLE_SHARED=ON \
        -DLIBUNWIND_ENABLE_STATIC=ON \
        -DLIBUNWIND_TARGET_TRIPLE="%(build)" \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
        -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
        -DCOMPILER_RT_BUILD_PROFILE=OFF \
        -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
        -DCOMPILER_RT_BUILD_XRAY=OFF \
        -DLLVM_USE_SANITIZER=OFF \
        -DLLVM_ENABLE_UNWIND_TABLES=OFF \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_INCLUDE_UTILS=OFF \
        -DCLANG_DEFAULT_UNWINDLIB="libunwind" \
        -DLLVM_OPTIMIZED_TABLEGEN=ON \
        -DLLVM_BUILD_TOOLS=OFF \
        -DCLANG_BUILD_TOOLS=OFF"

    cd llvm
    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON
    cd ..

    %cmake_build
    %cmake_build llvm-config

    %cmake_install

    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=OFF \
        -DLLVM_LINK_LLVM_DYLIB=OFF \
        -DCLANG_LINK_CLANG_DYLIB=OFF
    cd ..

    # Relink lld and clang statically
    %cmake_build lld clang
    cp %(builddir)/bin/* "%(installroot)/usr/bin"

    # lld as default linker
    ln -svf ld.lld "%(installroot)/usr/bin/ld"
