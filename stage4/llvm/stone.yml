name        : llvm
version     : 12.0.0
release     : 1
summary     : Low Level Virtual Machine
license     :
    - Apache-2.0 WITH LLVM-exception
    - NCSA
homepage    : https://www.llvm.org
description : |
    Low Level Virtual Machine
upstreams   :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang-12.0.0.src.tar.xz:
        hash: e26e452e91d4542da3ebbf404f024d3e1cbf103f4cd110c26bf0a19621cca9ed
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/compiler-rt-12.0.0.src.tar.xz:
        hash: 85a8cd0a62413eaa0457d8d02f8edac38c4dc0c96c00b09dc550260c23268434
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libcxx-12.0.0.src.tar.xz:
        hash: 7dcb75ca4f6aae2c677d128460c48a57398c8b6791b77b74bea7cf9e04e7c3f1
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libcxxabi-12.0.0.src.tar.xz:
        hash: 6ab8e8cd148a7d5103067e05c36e36ef36e27634fc8e73b5712853c9affe75b1
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz:
        hash: 9ed2a5b28853f7f58be9d04836ff43d6e4132df5a2c058b690dc3e9d75bd1cf5
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz:
        hash: 2cb7d497f3ce33ce8a2c50ad26ec93a8c45f57268d4d96953cd0f25566f753fd
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz:
        hash: 49dc47c8697a1a0abd4ee51629a696d7bfe803662f2a7252a3b16fc75f3a8b50
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/openmp-12.0.0.src.tar.xz:
        hash: eb1b7022a247332114985ed155a8fb632c28ce7c35a476e2c0caf865150f167d
        extract: false
install     : |
    tar xf %(sourcedir)/clang-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/compiler-rt-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxx-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxxabi-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libunwind-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/lld-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/llvm-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/openmp-%(version).src.tar.xz -C .

    # Setup source tree
    ln -sv "clang-%(version).src" clang
    ln -sv "compiler-rt-%(version).src" compiler-rt
    ln -sv "libcxx-%(version).src" libcxx
    ln -sv "libcxxabi-%(version).src" libcxxabi
    ln -sv "libunwind-%(version).src" libunwind
    ln -sv "lld-%(version).src" lld
    ln -sv "llvm-%(version).src" llvm

    # This is a bit hacky till there's an export for all build stages
    export llvmopts="
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_ENABLE_PROJECTS='clang;compiler-rt;libcxx;libcxxabi;libunwind;lld;llvm' \
        -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_TARGET_ARCH="X86_64" \
        -DLLVM_DEFAULT_TARGET_TRIPLE="%(build)" \
        -DLLVM_TARGETS_TO_BUILD="X86" \
        -DLLVM_ENABLE_LIBXML2=OFF \
        -DLLVM_ENABLE_FFI=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
        -DCLANG_DEFAULT_LINKER=lld \
        -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
        -DCLANG_DEFAULT_RTLIB=compiler-rt \
        -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
        -DCOMPILER_RT_USE_LIBCXX=ON \
        -DLLVM_ENABLE_LIBCXX=ON \
        -DSANITIZER_CXX_ABI=libc++ \
        -DLIBCXX_INSTALL_SUPPORT_HEADERS=ON \
        -DLIBCXX_ENABLE_SHARED=ON \
        -DLIBCXX_ENABLE_STATIC=OFF \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_ENABLE_SHARED=ON \
        -DLIBCXXABI_ENABLE_STATIC=OFF \
        -DLIBCXXABI_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_ENABLE_SHARED=ON \
        -DLIBUNWIND_ENABLE_STATIC=ON \
        -DLIBUNWIND_TARGET_TRIPLE="%(build)" \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
        -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
        -DCOMPILER_RT_BUILD_PROFILE=OFF \
        -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
        -DCOMPILER_RT_BUILD_XRAY=OFF \
        -DLLVM_USE_SANITIZER=OFF \
        -DLLVM_ENABLE_UNWIND_TABLES=OFF \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_INCLUDE_UTILS=OFF \
        -DCLANG_DEFAULT_UNWINDLIB="libunwind" \
        -DLLVM_OPTIMIZED_TABLEGEN=ON \
        -DLLVM_BUILD_TOOLS=OFF \
        -DCLANG_BUILD_TOOLS=OFF"

    cd llvm
    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON
    cd ..

    %cmake_build
    %cmake_build llvm-config

    %cmake_install

    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=OFF \
        -DLLVM_LINK_LLVM_DYLIB=OFF \
        -DCLANG_LINK_CLANG_DYLIB=OFF
    cd ..

    # Relink lld and clang statically
    %cmake_build lld clang
    cp %(builddir)/bin/* "%(installroot)/usr/bin"

    # lld as default linker
    ln -svf ld.lld "%(installroot)/usr/bin/ld"
