name        : toolchain
version     : 11.0.1
release     : 1
summary     : Low Level Virtual Machine
license     :
    - Apache-2.0 WITH LLVM-exception
    - NCSA
homepage    : https://www.llvm.org
description : |
    Low Level Virtual Machine
upstreams   :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/clang-11.0.1.src.tar.xz:
        hash: 73f572c2eefc5a155e01bcd84815751d722a4d3925f53c144acfb93eeb274b4d
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/compiler-rt-11.0.1.src.tar.xz:
        hash: 087be3f1116e861cd969c9b0b0903c27028b52eaf45157276f50a9c2500687fc
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/libcxx-11.0.1.src.tar.xz:
        hash: 9fd5f669621ffea88a2b93e3d99f3a958b5defb954f71bf754709b63275f5e3d
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/libcxxabi-11.0.1.src.tar.xz:
        hash: 4a697056a5c08621a8380dcaf3836525835aa76b3008d9e8f27abf9270bf683f
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/libunwind-11.0.1.src.tar.xz:
        hash: 6db3b173d872911c9ce1f2779ea4463b3b7e582b4e5fda9d3a005c1ed5ec517f
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/lld-11.0.1.src.tar.xz:
        hash: 60ba0da01a391078dcc437fee629f3bf7e30e06467a3a060b4a2a3aa661308b7
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/llvm-11.0.1.src.tar.xz:
        hash: ccd87c254b6aebc5077e4e6977d08d4be888e7eb672c6630a26a15d58b59b528
        extract: false
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.1/openmp-11.0.1.src.tar.xz:
        hash: 4d15a21b90e7de2f01296503f6e4b16c50197fbe9c82e7e81f9c07e28bd82ca7
        extract: false
install     : |
    tar xf %(sourcedir)/clang-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/compiler-rt-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxx-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libcxxabi-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/libunwind-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/lld-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/llvm-%(version).src.tar.xz -C .
    tar xf %(sourcedir)/openmp-%(version).src.tar.xz -C .

    # Setup source tree
    ln -sv "clang-%(version).src" clang
    ln -sv "compiler-rt-%(version).src" compiler-rt
    ln -sv "libcxx-%(version).src" libcxx
    ln -sv "libcxxabi-%(version).src" libcxxabi
    ln -sv "libunwind-%(version).src" libunwind
    ln -sv "lld-%(version).src" lld
    ln -sv "llvm-%(version).src" llvm

    # This is a bit hacky till there's an export for all build stages
    export llvmopts="
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_ENABLE_PROJECTS='clang;compiler-rt;libcxx;libcxxabi;libunwind;lld;llvm' \
        -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_TARGET_ARCH="X86_64" \
        -DLLVM_DEFAULT_TARGET_TRIPLE="%(build)" \
        -DLLVM_TARGETS_TO_BUILD="X86" \
        -DLLVM_ENABLE_LIBXML2=OFF \
        -DLLVM_ENABLE_FFI=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
        -DCLANG_DEFAULT_LINKER=lld \
        -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
        -DCLANG_DEFAULT_RTLIB=compiler-rt \
        -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
        -DCOMPILER_RT_USE_LIBCXX=ON \
        -DLLVM_ENABLE_LIBCXX=ON \
        -DSANITIZER_CXX_ABI=libc++ \
        -DLIBCXX_INSTALL_SUPPORT_HEADERS=ON \
        -DLIBCXX_ENABLE_SHARED=ON \
        -DLIBCXX_ENABLE_STATIC=OFF \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_ENABLE_SHARED=ON \
        -DLIBCXXABI_ENABLE_STATIC=OFF \
        -DLIBCXXABI_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_ENABLE_SHARED=ON \
        -DLIBUNWIND_ENABLE_STATIC=ON \
        -DLIBUNWIND_TARGET_TRIPLE="%(build)" \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
        -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
        -DCOMPILER_RT_BUILD_PROFILE=OFF \
        -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
        -DCOMPILER_RT_BUILD_XRAY=OFF \
        -DLLVM_USE_SANITIZER=OFF \
        -DLLVM_ENABLE_UNWIND_TABLES=OFF \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_INCLUDE_UTILS=OFF \
        -DCLANG_DEFAULT_UNWINDLIB="libunwind" \
        -DLLVM_OPTIMIZED_TABLEGEN=ON \
        -DLLVM_BUILD_TOOLS=OFF \
        -DCLANG_BUILD_TOOLS=OFF"

    cd llvm
    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON

    %cmake_build
    %cmake_build llvm-config

    %cmake_install

    %cmake ${llvmopts} \
        -DLLVM_BUILD_LLVM_DYLIB=OFF \
        -DLLVM_LINK_LLVM_DYLIB=OFF \
        -DCLANG_LINK_CLANG_DYLIB=OFF

    # Relink lld and clang statically
    %cmake_build lld clang
    cp bin/* "%(installroot)/usr/bin"

    # lld as default linker
    ln -svf ld.lld "%(installroot)/usr/bin/ld"
